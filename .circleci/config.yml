# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1

executors:
  openjdk:
    parameters:
      jdk-version:
        type: enum
        enum: ["8", "11"]
    docker:
      - image: circleci/clojure:openjdk-<< parameters.jdk-version>>-tools-deps-1.10.1.483-node-browsers
    environment:
      MAVEN_VERSION: "3.6.3"
      GRAALVM_VERSION: "19.2.1"
      GRAALVM_HOME: /home/circleci/graalvm-ce-19.2.1
      JVM_OPTS: -Xmx3200m
    working_directory: ~/repo

commands:
  build:
    description: "Checkout, build and test"
    steps:
      - checkout

      - run:
          name: System info
          command: free -h

      - run:
          name: Update linux packages
          command: |
            sudo apt-get update
            # packages needed for planck & graalvm
            sudo apt-get install -y javascriptcoregtk-4.0 libglib2.0-dev libzip-dev libcurl4-gnutls-dev \
              git-extras \
              gcc

      - run:
          name: Install planck
          command: |
            curl -O https://planck-repl.org/releases/2.24.0-debian-9.0-x86_64/planck
            chmod +x planck
            echo e19e28efb00733912c8cf114e56da10b  planck | md5sum --check
            sudo mv planck /usr/local/bin
            planck --version

      - run:
          name: Install maven
          command: |
            curl -O https://www.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
            sudo tar xf apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /opt/
            sudo ln -s /opt/apache-maven-${MAVEN_VERSION}/bin/mvn /usr/local/bin
            mvn --version

      - run:
          name: Install jet
          command: |
            curl -s https://raw.githubusercontent.com/borkdude/jet/master/install | sudo bash
            jet --version

      - run:
          name: Install GraalVM
          command: |
            cd ~
            if ! [ -d "graalvm-ce-${GRAALVM_VERSION}" ]; then
              curl -O -L "https://github.com/oracle/graal/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-linux-amd64-${GRAALVM_VERSION}.tar.gz"
              tar -xvf "graalvm-ce-linux-amd64-${GRAALVM_VERSION}.tar.gz"
            fi
            "${GRAALVM_HOME}/bin/gu" install native-image
            "${GRAALVM_HOME}/bin/native-image" --version

      - restore_cache:
          keys:
            - v1-npm-dependencies-{{ checksum "package-lock.json" }}
            - v1-npm-dependencies- # fallback if cache not found

      - run:
          name: Install karma command line
          command: sudo npm install karma-cli -g

      - run:
          name: Download node dependencies
          command: npm install

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
            - v1-dependencies- # fallback if cache not found

      - run:
          name: Bring down the deps
          command: |
            clojure -Spath
            git config --global user.email "lee@dlread.com"
            git config --global user.name "lread"
            ./script/graal-deps.sh

      - run:
          name: Run ci tests
          command: ./script/ci-tests.sh

      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-19.2.1
          key: v1-dependencies-{{ checksum "deps.edn" }}

      - save_cache:
          paths:
            - ./node_modules
          key: v1-npm-dependencies-{{ checksum "package-lock.json" }}

      - store_test_results:
          path: target/out/test-results

      - store_artifacts:
          path: target/out/test-results

jobs:
  openjdk11:
    executor:
      name: openjdk
      jdk-version: "11"
    steps: [build]

  openjdk8:
    executor:
      name: openjdk
      jdk-version: "8"
    steps: [build]

workflows:
  test-matrix:
    jobs:
      - openjdk11
      - openjdk8
